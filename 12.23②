1.#include <iostream>
#include<cstring>
#include<string>
#include<cctype>
using namespace std;
const int MAX = 100000;
string str[MAX] = {};
string str2[MAX] = {};
string str3[MAX] = {};
int counting[MAX] = {};
int main()
{
	 
	string s;
	int count = 0, count_2 = 0, count_3 = 0, count_4 = 0,count_5=0;
	while (cin >> s)
	{
		if (s[0] == '#')
			break;
		else
		{
			str[count] = s;
			str2[count] = s;
			count++;
		}
	}

	for (int i = 0; i < count; i++)
	{
		for (auto& j : str[i])
		{
			j = tolower(j);
		}
	}

	for (int k = 0; k < count; k++)
	{
		count_2 = 0;
		for (int t = 0; t < count; t++)
		{
			if (t == k && t == count - 1) break;
			if (t == k)t++;
			count_4 = 0;
			if (str[t].size() == str[k].size()) {
				for (int i = 0; i < str[t].size(); i++)
				{
					for (int j = 0; j < str[k].size(); j++)
					{
						if (str[k][j] == str[t][i] && counting[j] == 0)
						{
							count_4++;
							counting[j]++;
							break;
						}
					}
				}
			}
			for (int u = 0; u < 20; u++)
			{
				counting[u] = 0;
			}
			if (count_4 == str[t].size())
			{
				count_2++;
				break;
			}
		}




		if (count_2 == 0)
		{
			str3[count_3] = str2[k];
			count_3++;
		}
	}
	for (int j = 0; j < count_3-1; j++)
	{ 
		for (int y = 0; y < count_3-j-1; y++)
		{
				if (str3[y] > str3[y+1])
				{
					string temp = str3[y];
					str3[y] = str3[y+1];
					str3[y+1] = temp;
				}
			
		}
		 
	}
	for (int j = 0; j < count_3; j++)
		cout << str3[j] << endl;

	return 0;
}


2.
#include <iostream>
using namespace std;
const int MAX = 100001;
int card[MAX] = {};
int main()
{
	int way, x, y;
	struct node {
		int data;
		node *next;
	};
	node * head = NULL;
	int m, n;
	cin >> n >> m;
	for (int i = 0; i < n; i++)
	{
		node* p = (node*)malloc(sizeof(node));
		p->data = n-i;
		p->next = head;
		head = p;
	}
	for (int w = 0; w < m; w++)
	{
		cin >> way>> x >> y;
		switch (way)
		{
		case 1:break;
		case 2:break;
		case 3:break;
		case 4:break;
		}
	}




	return 0;
}




#include <iostream>
using namespace std;
const int N = 10;
struct node {
	int data;
	node* next;

};
int main()
{
	
	node* tail = NULL;
	node * head = NULL;
	for (int i = 0; i < N; ++i)
	{
		node* p = (node*)malloc(sizeof(node));
		p->data = i+1;
		p->next = NULL;
		if (head == NULL)
			head = p;
		else
			tail->next = p;
		tail = p;
	}
	return 0;
}
void toleft(node* x, node* y)
{
	node* p = (node*)malloc(sizeof(node));
	p->data = x->data;
	p->next = y;
	node* w = y - 1;
	w->next = p;
	node* q = x->next;
	node* q2 = x-1;
	q2->next = q;
	free(x);
}
void right(node* x, node* y)
{



}
